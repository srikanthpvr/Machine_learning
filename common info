R2 for training data goodness of fit -how much data is using to explain the variance
for test data accuracy  = 100-MAPE has to be used. MAPE = Mean Absolute percentage error
to explain the customer we need to show MAPE which will explain how much error is model making
For training the hyperparameters we need to use MAE,RMSE,MSE

python has requests module  and flask has request function,jsonify
from requests module we can use requests.loads to read the json file to python object and request.dumps for converting to json file from pyton object

Always use F1 score for classification

clasfication Metrics:
Categorical cross entropy
Binomial cross entropy

Loss functions:

**Why F1-Score Uses Harmonic Mean Instead of Arithmetic Mean**

The F1-score is a metric used to evaluate the performance of a classification model, particularly in imbalanced datasets. It's calculated as the harmonic mean of precision and recall.

**Why Harmonic Mean?**

The harmonic mean is used instead of the arithmetic mean because it gives more weight to lower values. This means that if either precision or recall is low, the F1-score will also be low. In contrast, the arithmetic mean would give equal weight to both metrics, which might not accurately reflect the overall performance of the model.

**Here's a breakdown:**

* **Precision:** The proportion of positive identifications that were actually correct.
* **Recall:** The proportion of actual positives that were correctly identified.

**Arithmetic Mean:**
- Gives equal weight to both precision and recall.
- If one metric is high and the other is low, the arithmetic mean can still be high, which might not accurately reflect the model's performance.

**Harmonic Mean:**
- Penalizes low values more heavily.
- If either precision or recall is low, the F1-score will also be low.
- This encourages a balance between precision and recall, ensuring that the model performs well on both metrics.

**In summary:**

The harmonic mean is a more robust metric for evaluating classification models, especially when dealing with imbalanced datasets. It ensures that the model performs well on both precision and recall, providing a more comprehensive assessment of its overall performance.

if __name__=="__main__":
  main()
To undersatnd better see th below link
https://www.youtube.com/watch?v=NB5LGzmSiCs 
